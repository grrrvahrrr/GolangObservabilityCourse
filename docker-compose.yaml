version: "3.7"

volumes:
  prometheus_data: {}

services:

  registry:
    image: registry:2
    container_name: registryBitme
    ports:
      - 5000:5000
    restart: unless-stopped
    networks:
      - bitmenet

  postgres:
    image: postgres:14.0
    container_name: postgrescompose
    restart: unless-stopped
    ports:
      - 5433:5432
    volumes:     
      - /home/deus/db/data:/var/lib/postgresql/data     
    environment:
      POSTGRES_USER: bituser
      POSTGRES_PASSWORD: bit
      POSTGRES_DB: bitmedb
      PGDATA: /var/lib/postgresql/data
    networks:
      - bitmenet

  migrate:
        image: migrate/migrate
        container_name: migratecompose
        networks:
            - bitmenet
        volumes:
            - ./migrations:/migrations
        command: ["-path", "/migrations", "-database",  "postgres://bituser:bit@postgres/bitmedb?sslmode=disable", "up"]
        links: 
            - postgres 

  # node-exporter:
  #   image: prom/node-exporter:latest
  #   container_name: node-exporter-bitme
  #   restart: unless-stopped
  #   volumes:
  #     - /proc:/host/proc:ro
  #     - /sys:/host/sys:ro
  #     - /:/rootfs:ro
  #   command:
  #     - '--path.procfs=/host/proc'
  #     - '--path.rootfs=/rootfs'
  #     - '--path.sysfs=/host/sys'
  #     - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
  
  #   ports:
  #     - 9100:9100
  #   networks:
  #     - bitmenet

  # prometheus:
  #   image: prom/prometheus:v2.25.0
  #   container_name: prometheus-bitme
  #   restart: unless-stopped
  #   volumes:
  #     - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
  #     - prometheus_data:/prometheus
  #     - ./prometheus/prometheus.rules.yml:/etc/prometheus/prometheus.rules.yml
  #     - ./prometheus/alert.rules.yml:/etc/prometheus/alert.rules.yml
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #     - '--storage.tsdb.path=/prometheus'
  #     - '--web.console.libraries=/etc/prometheus/console_libraries'
  #     - '--web.console.templates=/etc/prometheus/consoles'
  #     - '--web.enable-lifecycle'
  #   ports:
  #     - 9090:9090
  #   networks:
  #     - bitmenet

  # alertmanager:
  #   image: prom/alertmanager
  #   ports:
  #     - 9093:9093
  #   volumes:
  #     - ./prometheus/alertmanager/rules.yml:/etc/alertmanager/config.yml
  #   command:
  #     - '--config.file=/etc/alertmanager/config.yml'
  #     - '--storage.path=/alertmanager'
  #   networks:
  #     - bitmenet

  # grafana:
  #   image: grafana/grafana
  #   user: "1000"
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - "./prometheus/grafana/provisioning/:/etc/grafana/provisioning/"
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=Password
  #     - GF_USERS_ALLOW_SIGN_UP=false
  #   networks:
  #     - bitmenet
  
  # fluentd:
  #   build: ./fluentd
  #   container_name: fluentd
  #   volumes:
  #     - ./fluentd/conf:/fluentd/etc
  #   ports:
  #     - "24224:24224"
  #     - "24224:24224/udp"
  #   networks:
  #     - bitmenet

  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.9.2
  #   container_name: elasticsearch
  #   environment:
  #     - discovery.type=single-node
  #     - xpack.security.enabled=false
  #   volumes:
  #     - ./elasticsearch:/usr/share/elasticsearch/data
  #   ports:
  #     - "9200:9200"
  #   networks:
  #     - bitmenet

  # kibana:
  #   image: kibana:7.9.2
  #   container_name: kibana
  #   environment:       
  #     ELASTICSEARCH_URLS: http://elasticsearch:9200
  #     ELASTICSEARCH_HOSTS: http://elasticsearch:9200
  #   volumes:
  #     - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml
  #   ports:
  #     - "5601:5601"
  #   depends_on:
  #     - elasticsearch
  #   networks:
  #     - bitmenet

  # apm-sever:
  #   image: docker.elastic.co/apm/apm-server:7.9.2
  #   restart: unless-stopped
  #   cap_add: [ "CHOWN", "DAC_OVERRIDE", "SETGID", "SETUID" ]
  #   cap_drop: [ "ALL" ]
  #   ports: 
  #     - 8200:8200
  #   depends_on:
  #     - bitme      
  #     - fluentd
  #     - elasticsearch
  #     - kibana
  #   networks:
  #     - bitmenet
  #   command: >
  #     apm-server -e
  #       -E apm-server.rum.enabled=true
  #       -E setup.kibana.host=kibana:5601
  #       -E setup.template.settings.index.number_of_replicas=0
  #       -E apm-server.kibana.enabled=true
  #       -E apm-server.kibana.host=kibana:5601
  #       -E output.elasticsearch.hosts=["elasticsearch:9200"]
    


  jaeger:
    image: jaegertracing/all-in-one:latest
    environment:
      COLLECTOR_ZIPKIN_HTTP_PORT: 9411
    ports:
      - "5775:5775/udp"
      - "6832:6832/udp"
      - "6831:6831/udp"
      - "16686:16686"      
      - "5778:5778"
      - "14268:14268"
      - "9411:9411"
    networks:
      - bitmenet

  redis:
    image: "redis:alpine"
    ports:
      - 6379:6379
    command: redis-server   
    networks:
      - bitmenet

  bitme:
    image: 127.0.0.1:5000/bitme:latest
    container_name: bitme
    build: .
    restart: unless-stopped
    ports:
      - 8000:8000
    environment:
      PG_DSN: postgres://bituser:bit@postgres/bitmedb?sslmode=disable
    depends_on:
      - registry
      - postgres
      - jaeger
      - redis
      # - fluentd
    logging:
      driver: "fluentd"
      options:
        fluentd-async-connect: "true"
        fluentd-address: localhost:24224
        tag: bitme
    networks:
      - bitmenet
  
  
networks:
  bitmenet:
